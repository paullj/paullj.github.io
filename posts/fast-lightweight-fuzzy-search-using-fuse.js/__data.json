{"number":28,"slug":"fast-lightweight-fuzzy-search-using-fuse.js","url":"https://github.com/paullj/paullj.github.io/discussions/28","title":"Fast, Lightweight Fuzzy Search","description":"How the fast and lightweight fuzzy searching for this website works","publishedAt":"2022-06-19T12:00Z","updatedAt":"2022-07-06T14:40:33Z","createdAt":"2022-06-19T17:21:41Z","author":{"avatarUrl":"https://avatars.githubusercontent.com/u/8403295?s=100&u=6e4dae687f6ff9d1ffad227b6d5e953ae3e5b738&v=4","login":"paullj","url":"https://github.com/paullj"},"category":"Published Posts","content":"\n<p><strong>NOTE:</strong> <em>Since writing this post, I have removed Fuse.js altogether in favour of an even simpler method. The new script is available <a\n  href=\"https://github.com/paullj/paullj.github.io/blob/main/src/lib/utils/fuzzy.ts\"\n  rel=\"nofollow noopener noreferrer\"\n  target=\"_blank\"\n>here</a> and just searches if letters occur roughly in the correct order of the search pattern. Fuse.js is still a great library and is a great option for larger datasets. Especially, if searching full bodies of text and not just titles.</em></p>\n<p>For a small static blog, server side searching via Algolia or ElasticSearch can be overkill. This website uses a small lightweight library <a\n  href=\"https://fusejs.io/\"\n  rel=\"nofollow noopener noreferrer\"\n  target=\"_blank\"\n>Fuse.js</a> for client-side fuzzy searching. You can try out the search on the front page <a\n  href=\"https://paullj.github.io/\"\n  rel=\"nofollow noopener noreferrer\"\n  target=\"_blank\"\n>here</a> by typing <code>/</code> or clicking in the search bar.</p>\n<p>First of all, what is fuzzy searching? To quote the library directly:</p>\n<blockquote>\n<p>Generally speaking, fuzzy searching is the technique of finding strings that are approximately equal to a given pattern (rather than exactly).</p>\n</blockquote>\n<p>Since we already have our posts data in JSON, using this library to add a search functionality only requires a few lines of code as shown below.</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> Fuse <span class=\"token keyword\">from</span> <span class=\"token string\">'fuse.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token function\">onMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    fuse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Fuse</span><span class=\"token punctuation\">(</span>posts<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n      keys<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Another bonus with using Fuse.js is that, because it has no external and DOM dependancies, it can also be used on the backend if required. In our case, this means that it is possible to build a search index when our static site is built and deployed. This has not been implemented yet, but with more posts this will be a useful feature to add.</p>\n<p>Using Svelte also means that adding quality of life features like shortcuts to focus searching is very easy. Listening for the <code>/</code> key to be pressed can be intercepted is done with the snippet below.</p>\n<pre class=\"language-svelte\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">svelte:</span>body</span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">on:</span>keydown=</span><span class=\"token language-javascript\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> \n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>key <span class=\"token operator\">===</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">&amp;&amp;</span> document<span class=\"token punctuation\">.</span>activeElement <span class=\"token operator\">!==</span> element<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        element<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        element<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span></span>\n<span class=\"token punctuation\">/></span></span></code></pre>\n<p>The whole search component used for this website is available <a\n  href=\"https://github.com/paullj/paullj.github.io/blob/main/src/lib/components/Search.svelte\"\n  rel=\"nofollow noopener noreferrer\"\n  target=\"_blank\"\n>here</a>. It is lightweight, quick and very simple to add to any existing small SvelteKit blog, with possibilities for larger datasets too.</p>\n","reactions":0,"comments":0,"readingTime":2,"viewCount":2}