---
import type { Page, GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import PageLayout from "@/layouts/Base";
import PostPreview from "@/components/blog/PostPreview";
import Pagination from "@/components/Paginator";
import { getAllPosts, getUniqueTags, sortMDByDate } from "@/utils";
import { siteConfig } from "@/site-config";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = await getAllPosts();
  const allPostsByDate = sortMDByDate(allPosts);
  const uniqueTags = getUniqueTags(allPostsByDate);

  return uniqueTags.flatMap((tag) => {
    const filterPosts = allPostsByDate.filter((post) => post.data.tags.includes(tag));
    return paginate(filterPosts, {
      params: { tag },
      pageSize: siteConfig.postsPerPage,
    });
  });
};

interface Props {
  page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
  title: `Tag: ${tag}`,
  description: `View all posts with the tag - ${tag}`,
};

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      url: page.url.prev,
      text: `← Previous Tags`,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      url: page.url.next,
      text: `Next Tags →`,
    },
  }),
};
---

<PageLayout meta={meta}>
  <h1 class="title mb-6 flex items-center">
    <a href="/tags/" class="text-accent sm:hover:underline">Tags</a>
    <span class="me-3 ms-2">→</span>
    <span class="text-xl">#{tag}</span>
  </h1>
  <section aria-label="Blog post list">
    <ul class="space-y-8">
      {page.data.map((p) => <PostPreview post={p} as="h2" withDesc />)}
    </ul>
    <Pagination {...paginationProps} />
  </section>
</PageLayout>
